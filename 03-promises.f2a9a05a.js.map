{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAkCAQ,SAASC,cAAc,SAC/BC,iBAAiB,UA9BtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,OACTC,EAAaF,EAAKG,SAAShB,MAC3BiB,EAAYJ,EAAKG,SAASE,KAC1BC,EAAcN,EAAKG,SAASI,OAE5BC,EAAaC,OAAOP,EAAWQ,OAC/BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAEhC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAIjC1B,EAHiB0B,EAAI,EACPH,EAAaG,EAAIN,GAG5BO,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,QAAQC,IAAI,uBAAqB5B,QAAiBC,MAAU,IAE7D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClB0B,QAAQC,IAAI,sBAAoB5B,QAAeC,MAAU,G,CAK/Da,EAAKgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nfunction handleSubmit(e) {\n  e.preventDefault(); \n  const form = e.target;\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n\n  const firstDelay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n    for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n \n  form.reset();\n}\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","form1","target","delayInput","elements","stepInput","step","amountInput","amount","firstDelay","Number","value","i","then","console","log","catch","reset"],"version":3,"file":"03-promises.f2a9a05a.js.map"}