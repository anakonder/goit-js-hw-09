{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAkCMQ,SAASC,cAAc,SAC/BC,iBAAiB,UA9BtB,SAAsBC,GACpBA,EAAEC,iBAUA,IATF,IAAMC,EAAOF,EAAEG,OACTC,EAAaF,EAAKG,SAAShB,MAC3BiB,EAAYJ,EAAKG,SAASE,KAC1BC,EAAcN,EAAKG,SAASI,OAE5BC,EAAaC,OAAOP,EAAWQ,OAC/BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAEvBC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAIjC1B,EAHiB0B,EAAI,EACPH,EAAaG,EAAIN,GAG5BO,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,QAAQC,IAAI,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE3D8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,QAAQC,IAAI,sBAAqCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAK7Da,EAAKkB,O","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nfunction handleSubmit(e) {\n  e.preventDefault(); \n  const form = e.target;\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n\n  const firstDelay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n    for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n \n  form.reset();\n}\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","form1","target","delayInput","elements","stepInput","step","amountInput","amount","firstDelay","Number","value","i","then","param","console","log","concat","catch","reset"],"version":3,"file":"03-promises.f65f5244.js.map"}